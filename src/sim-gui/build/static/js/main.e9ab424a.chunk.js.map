{"version":3,"sources":["costants.js","components/DevicesTable.js","components/MyAppDevice.js","components/Quadretti.js","components/MyAppsTable.js","components/Number.js","components/Certificate.js","App.js","serviceWorker.js","index.js"],"names":["URL","update_time","DevicesTable","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","getData","fetch","then","res","json","setState","devices","prev_devices","state","length","setTimeout","_this2","react_default","a","createElement","reactstrap_es","scope","map","dev","i","key","deviceId","ipAddress","port","build_default","end","CRITICAL_CPU_PERCENTAGE","start","decimals","suffix","CRITICAL_MEM_PERCENTAGE","AVERAGE_CPU_USED","totalCPU","AVERAGE_MEM_USED","totalMEM","AVERAGE_MYAPP_COUNT","DEVICE_DOWN_PROB_chaos","DEVICE_ENERGY_CONSUMPTION","React","Component","MyAppDevice","className","style","gridArea","time","toFixed","role","width","startTime","aria-valuenow","aria-valuemin","aria-valuemax","Quadretti","data","value","lineHeight","name","toLowerCase","color","val","alert_to_color","APP_HEALTH","DEVICE_REACHABILITY","MYAPP_CPU_CONSUMING","MYAPP_MEM_CONSUMING","MyAppsTable","myapps","myappOnDevice","striped","myapp","pie_data","k","ALERT_PERCENTAGE","push","myappId","UP_PERCENTAGE","keys","ON_DEVICE_PERCENTAGE","MyAppDevice_MyAppDevice","ON_DEVICE_START_TIME","reduce","p","v","lib","id","size","innerHoleSize","Quadretti_Quadretti","Number","title","Certificate","prev","current","cost","prev_cost","energy_history","concat","toConsumableArray","x","y","uptime","average_alerts","forEach","total","prev_uptime","uptime_history","Number_Number","axes","yAxisOrientLeft","height","yDomainRange","yTicks","xTicks","simCounter_updateTime","App","setCounter","text","counter_loading","counter","parseInt","prev_counter","BrowserRouter","href","easingFn","t","b","c","d","duration","Route","path","exact","component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e9ab424a.chunk.js","sourcesContent":["export const URL = \"http://localhost:5000\"","import React from 'react';\nimport { Table } from 'reactstrap';\nimport { URL } from \"../costants\"\nimport CountUp from 'react-countup';\n\nconst update_time = 3\n\nexport default class DevicesTable extends React.Component {\n  constructor(props){\n    super(props)\n    this.state = {devices: [], prev_devices: []}\n  }\n\n  getData = () => {\n    fetch(URL+\"/result/devices\")\n      .then(res => res.json())\n      .then(res => this.setState({devices: res, prev_devices: this.state.devices.length === 0 ? res : this.state.devices}))\n    setTimeout(this.getData, update_time*900)\n  }\n\n  componentWillMount(){\n    this.getData()\n  }\n\n  render() {\n    return (\n      <Table>\n        <thead>\n          <tr>\n            <th>#</th>\n            <th scope=\"row\">ID</th>\n            <th>IP</th>\n            <th>Port</th>\n            <th>CRITICAL CPU</th>\n            <th>CRITICAL MEM</th>\n            <th>AVG CPU Usage</th>\n            <th>AVG MEM Usage</th>\n            <th>AVG #MYAPP</th>\n            <th>DOWN PROB</th>\n            <th>MEAN ENERGY</th>\n          </tr>\n        </thead>\n        <tbody>\n          {\n            this.state.devices.map((dev, i) => (\n              <tr key={dev.deviceId}>\n                <td>{i}</td>\n                <td>{dev.deviceId}</td>\n                <td>{dev.ipAddress}</td>\n                <td>{dev.port}</td>\n                <td><CountUp key={dev.deviceId} end={dev.CRITICAL_CPU_PERCENTAGE*100}     start={this.state.prev_devices[i].CRITICAL_CPU_PERCENTAGE*100}   decimals={2}  suffix=\" %\"  /></td>\n                <td><CountUp key={dev.deviceId} end={dev.CRITICAL_MEM_PERCENTAGE*100}     start={this.state.prev_devices[i].CRITICAL_MEM_PERCENTAGE*100}   decimals={2}  suffix=\" %\"   /></td>\n                <td><CountUp key={dev.deviceId} end={(dev.AVERAGE_CPU_USED)}              start={this.state.prev_devices[i].AVERAGE_CPU_USED}              decimals={2}  suffix={\"/\"+dev.totalCPU}/></td>\n                <td><CountUp key={dev.deviceId} end={(dev.AVERAGE_MEM_USED)}              start={this.state.prev_devices[i].AVERAGE_MEM_USED}              decimals={2}  suffix={\"/\"+dev.totalMEM}/></td>\n                <td><CountUp key={dev.deviceId} end={(dev.AVERAGE_MYAPP_COUNT)}           start={this.state.prev_devices[i].AVERAGE_MYAPP_COUNT}           decimals={2} /></td>\n                <td><CountUp key={dev.deviceId} end={(dev.DEVICE_DOWN_PROB_chaos*100)}    start={this.state.prev_devices[i].DEVICE_DOWN_PROB_chaos*100}    decimals={2}  suffix=\" %\" /></td>\n                <td><CountUp key={dev.deviceId} end={(dev.DEVICE_ENERGY_CONSUMPTION * 0.72)}     start={this.state.prev_devices[i].DEVICE_ENERGY_CONSUMPTION * 0.72}     decimals={2}  suffix=\" kWh/month\" /></td>\n              </tr>\n            ))\n          }\n        </tbody>\n      </Table>\n    );\n  }\n}","import React from \"react\"\n\nexport default class MyAppDevice extends React.Component{\n    render(){\n        return <div className=\"myAppDeviceGrid\">\n            <div style={{gridArea:\"deviceId\"}}>DevId: {this.props.deviceId}</div><div style={{gridArea:\"timeInstalled\"}}>Runned: {this.props.time.toFixed(2)} %</div>\n            <div className=\"progress\" style={{gridArea:\"start\"}}>\n                <div className=\"progress-bar bg-success\" role=\"progressbar\" style={{width: this.props.startTime+\"%\"}} aria-valuenow=\"15\" aria-valuemin=\"0\" aria-valuemax=\"100\">{this.props.startTime > 10 ? this.props.startTime.toFixed(2) + \"%\" : \"\" }</div>\n                <div className=\"progress-bar bg-danger\" role=\"progressbar\" style={{width: 100-this.props.startTime+\"%\"}} aria-valuenow=\"15\" aria-valuemin=\"0\" aria-valuemax=\"100\">{this.props.startTime < 90 ? (100-this.props.startTime).toFixed(2) + \"%\" : \"\" }</div>\n            </div>\n        </div>\n    }\n}","import React from \"react\"\n\nexport default class Quadretti extends React.Component{\n\n    render(){\n        return <div className=\"quadretto\" style={{width: \"300px\"}}>\n            <h6>Values on total sampling</h6>\n            {\n                this.props.data.map(value => \n                    <p style={{lineHeight: \"3px\"}} key={value.name.toLowerCase()}><font color={value.color}>\n                        &#9632; {value.val.toFixed(2)} % {value.name.toLowerCase()}</font>\n                    </p>\n                )\n            }\n        </div>\n    }\n}","import React from 'react';\nimport { Table } from 'reactstrap';\nimport { URL } from \"../costants\"\nimport MyAppDevice from \"./MyAppDevice\"\nimport {PieChart} from 'react-easy-chart';\nimport Quadretti from \"./Quadretti\"\n\nlet alert_to_color = {\n  \"APP_HEALTH\": \"#CD533B\",\n  \"DEVICE_REACHABILITY\": \"#33753e\",\n  \"MYAPP_CPU_CONSUMING\": \"#E3B505\",\n  \"MYAPP_MEM_CONSUMING\": \"#4392F1\"\n}\n\nexport default class MyAppsTable extends React.Component {\n  constructor(props){\n    super(props)\n    this.state = {myapps: [], myappOnDevice: []}\n  }\n\n  getData = () => {\n    fetch(URL+\"/result/myapps\")\n      .then(res => res.json())\n      .then(res => this.setState({myapps: res}))\n    setTimeout(this.getData, 1000)\n  }\n\n  componentWillMount(){\n    this.getData()\n  }\n\n  render() {\n    return (\n      <Table striped>\n        <thead>\n          <tr>\n            <th scope=\"row\">#</th>\n            <th>MyApp ID</th>\n            <th>Name</th>\n            <th>Up Prob.</th>\n            <th>Down Prob.</th>\n            <th>Installed Probability</th>\n            <th>Alerts</th>\n          </tr>\n        </thead>\n        <tbody>\n          {\n            this.state.myapps.map((myapp, i) => {\n              let pie_data = []\n              for (let k in myapp.ALERT_PERCENTAGE){\n                pie_data.push({key: k, value: myapp.ALERT_PERCENTAGE[k], color: alert_to_color[k]})\n              }\n              //pie_data.push({key: \"no_alert\", value: total, color: \"green\"})\n              return <tr key={myapp.myappId}>\n              <td>{i}</td>\n              <td>{myapp.myappId}</td>\n              <td>{myapp.name}</td>\n              <td>{(myapp.UP_PERCENTAGE * 100).toFixed(2)} %</td>\n              <td>{(100 - (myapp.UP_PERCENTAGE * 100)).toFixed(2)} %</td>\n              <td>{Object.keys(myapp.ON_DEVICE_PERCENTAGE)\n                        .map(k => <MyAppDevice key={k} deviceId={k} time={myapp.ON_DEVICE_PERCENTAGE[k] * 100} startTime={myapp.ON_DEVICE_START_TIME[k]*100}/>)}\n                </td>\n              <td>\n                <table className=\"quadretto\">\n                <tbody><tr>\n                  <td>\n                    {pie_data.reduce((p, v) => p+v.value, 0) == 0 ? \"No alerts\" :\n                    <PieChart\n                      key={myapp.myappId}\n                      id={myapp.myappId}\n                      size={100}\n                      innerHoleSize={0}\n                      data={pie_data}\n                    />\n                  }\n                  </td>\n                  <td>\n                    <Quadretti data={pie_data.map(val => { return {color: val.color, val: val.value, name: val.key}} )} />\n                  </td>\n                  </tr>\n                </tbody>\n                </table>\n              </td>\n            </tr>\n            })\n          }\n        </tbody>\n      </Table>\n    );\n  }\n}","import React from \"react\"\nimport CountUp from 'react-countup';\n\nexport default class Number extends React.Component{\n    render(){\n        return <div><h3>{this.props.title}</h3>\n            <font size=\"3\" color={\"black\"}><CountUp start={this.props.start || 0} end={this.props.value} decimals={this.props.decimals} suffix={this.props.suffix} /></font></div>\n    }\n}\n","import React from 'react';\nimport { URL } from \"../costants\"\nimport Number from \"./Number\"\nimport {PieChart, LineChart} from 'react-easy-chart';\nimport Quadretti from \"./Quadretti\"\n\nlet alert_to_color = {\n    \"APP_HEALTH\": \"#CD533B\",\n    \"DEVICE_REACHABILITY\": \"#33753e\",\n    \"MYAPP_CPU_CONSUMING\": \"#e2b404\",\n    \"MYAPP_MEM_CONSUMING\": \"#4392F1\"\n}\n\nexport default class Certificate extends React.Component {\n    constructor(props){\n        super(props)\n        this.state = {cost: 0, uptime: 1, prev_cost: 0, prev_uptime: 1, pie_data: [], uptime_history: [], energy_history: []}\n    }\n\n    getData = () => {\n      fetch(URL+\"/result/devices\")\n        .then(res => res.json())\n        .then(res => res.reduce((prev, current) => (prev+current.DEVICE_ENERGY_CONSUMPTION), 0))\n        .then(cost => this.setState({cost: cost, prev_cost: this.state.cost, energy_history: [...this.state.energy_history, {x: this.state.energy_history.length + 1, y: cost}]}))\n      fetch(URL+\"/result/myapps\")\n        .then(res => res.json())\n        .then(res => {\n            let uptime = res.reduce((prev, current) => (prev+current.UP_PERCENTAGE), 0) / res.length\n            let average_alerts = {}\n            res.forEach(myapp => {\n                for(let key in myapp.ALERT_PERCENTAGE){\n                    if (average_alerts[key] != null){\n                        average_alerts[key] += myapp.ALERT_PERCENTAGE[key]\n                    }else{\n                        average_alerts[key] = myapp.ALERT_PERCENTAGE[key]\n                    }\n                }\n            })\n\n            let pie_data = []\n            let total = 100\n            for (let k in average_alerts){\n                pie_data.push({key: k, value: average_alerts[k]/res.length, color: alert_to_color[k]})\n                total -= average_alerts[k]/res.length\n            }\n            pie_data.push({key: \"NO_ALERT\", value: total, color: \"green\"})\n            this.setState({uptime: uptime, prev_uptime: this.state.uptime, pie_data: pie_data, uptime_history: [...this.state.uptime_history, {x: this.state.uptime_history.length + 1, y: uptime}]})\n        })\n      setTimeout(this.getData, 5000)\n    }\n\n    componentWillMount(){\n        fetch(URL+\"/result/uptime_history\")\n        .then(res => res.json())\n        .then(res => res.map( (value, i) => ({x: i, y: value}) )) \n        .then(res => this.setState({\"uptime_history\": res}))\n        fetch(URL+\"/result/energy_history\")\n        .then(res => res.json())\n        .then(res => res.map( (value, i) => ({x: i, y: value}) )) \n        .then(res => this.setState({\"energy_history\": res}))\n        this.getData()\n    }\n\n    render(){\n        return (\n        <div className=\"container\">\n        <div className=\"jumbotron\">\n                <h2 className=\"display-4\">Your system performance, in a nutshell</h2>\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <div className=\"col-sm\">\n                            <Number title=\"Total Energy\" start={this.state.prev_cost*0.72} value={this.state.cost*0.72} decimals={2} suffix=\" kWh/month\"/>\n                        </div>\n                        <div className=\"col-sm\">\n                            <Number title=\"Mean Uptime\" start={this.state.prev_uptime*100} decimals={2} value={this.state.uptime*100} suffix=\" %\" />\n                        </div>\n                        <div className=\"col-sm\">\n                            <Number title=\"Mean Downtime\" start={100-(this.state.prev_uptime*100)} decimals={2} value={100-(this.state.uptime*100)} suffix=\" %\"/>\n                        </div>\n                    </div>\n                    <hr className=\"my-4\"/>\n                    <div className=\"row\">\n                        <div className=\"col-sm\">\n                            <h2>Uptime</h2>\n                            <LineChart\n                                axes\n                                yAxisOrientLeft\n                                width={450}\n                                height={150}\n                                yDomainRange={[0, 1]}\n                                yTicks={3}\n                                xTicks={1}\n                                data={[this.state.uptime_history]}\n                            />\n                            <h2>Energy Consumption</h2>\n                            <LineChart\n                                axes\n                                yAxisOrientLeft\n                                width={450}\n                                height={150}\n                                yTicks={3}\n                                data={[this.state.energy_history]}\n                            />\n                        </div>\n                        <div className=\"col-sm\">\n                            <h3>Alert Type Summary</h3>\n                            <table className=\"quadretto\">\n                                    <tbody><tr>\n                                    <td>\n                                        <PieChart\n                                            key={\"pie\"}\n                                            id={\"pie-chart\"}\n                                            size={200}\n                                            innerHoleSize={0}\n                                            data={this.state.pie_data}\n                                        />\n                                    </td>\n                                    <td>\n                                        <Quadretti data={this.state.pie_data.map(val => { return {color: val.color, val: val.value, name: val.key}} )} />\n                                    </td>\n                                    </tr>\n                                    </tbody>\n                            </table>\n                        </div>\n                    </div>\n                </div>\n                \n                \n        </div></div>)\n    }\n}","import React, { Component } from 'react';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport { Nav, NavItem, NavLink} from 'reactstrap';\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport DevicesTable from \"./components/DevicesTable\"\nimport MyAppsTable from \"./components/MyAppsTable\"\nimport Certificate from './components/Certificate';\nimport { URL } from \"./costants\"\nimport CountUp from 'react-countup';\n\nconst simCounter_updateTime = 2000\n\nclass App extends Component {\n  constructor(props){\n    super(props)\n    this.state = {counter: 0, prev_counter: 0, counter_loading: true}\n  }\n\n  setCounter = () => {\n    fetch(URL+\"/result/simulationcounter\")\n    .then(res =>  res.text())\n    .then(res => this.setState({counter_loading: false, counter: parseInt(res), prev_counter: this.state.counter_loading ? parseInt(res-20) : this.state.counter}))\n    setTimeout(this.setCounter, simCounter_updateTime)\n  }\n\n  componentWillMount(){\n    this.setCounter()\n  }\n\n  render() {\n    return (\n      <Router>\n        <div className=\"col-lg-12\">\n          <Nav className=\"justify-content-center\">\n            <NavItem>\n              <NavLink href=\"/\">Home</NavLink>\n            </NavItem>\n            <NavItem >\n              <NavLink href=\"/devices\">Devices</NavLink>\n            </NavItem>\n            <NavItem>\n              <NavLink href=\"/myapps\">MyApps</NavLink>\n            </NavItem>\n          </Nav>\n          <Nav className=\"justify-content-center\">\n            <NavItem>\n    <NavLink>Simulation Iteration Counter: {this.state.counter_loading ? <i>loading</i> : <CountUp start={this.state.prev_counter} easingFn={(t,b,c,d) => b+c*(t/d)} end={this.state.counter} duration={simCounter_updateTime/2000+1}/>}</NavLink>\n            </NavItem>\n          </Nav>\n          <Route path=\"/\" exact component={Certificate} />\n          <Route path=\"/devices/\" component={DevicesTable} />\n          <Route path=\"/myapps/\" component={MyAppsTable} />\n        </div>\n\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}