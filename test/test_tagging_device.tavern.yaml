test_name: adding and tagging a device

includes:
  - !include serverconfig.yaml

stages:
  - name: login
    request:
      verify: false
      url: "{host:s}/api/v1/appmgr/tokenservice"
      method: POST
      auth:
        - admin
        - admin_123
    response:
      status_code: 202
      headers:
        content-type: application/json
      save:
        body:
          token: token

  - name: adding device
    request:
      verify: false
      url: "{host:s}/api/v1/appmgr/devices"
      method: POST
      headers:
        x-token-id: "{token:s}"
        content-type: application/json
      json:
        ipAddress: "10.10.20.51"
        port: 8443
        username: "cisco"
        password: "cisco"
    response:
      status_code: 201
      headers:
        content-type: application/json
      save:
        body:
          deviceid: deviceId
  
  - name: creating tag
    request:
      verify: false
      url: "{host:s}/api/v1/appmgr/tags"
      method: POST
      headers:
        x-token-id: "{token:s}"
        content-type: application/json
      json:
        name: "tag_device5"
    response:
      status_code: 201
      headers: 
        content-type: application/json
      save:
        body:
          new_testag_id: tagId
  
  - name: tagging device {deviceid:d}
    request:
      verify: false
      url: "{host:s}/api/v1/appmgr/tags/{new_testag_id:s}/devices"
      method: POST
      headers:
        x-token-id: "{token:s}"
        content-type: application/json
      json:
        devices: 
          - "{deviceid:d}"
    response:
      status_code: 200
      headers:
        content-type: application/json
      body:
        tagId: "{new_testag_id:s}"
      save:
        body:
          tagName: name
  
  - name: getting device {deviceid:d} by tag
    request:
      verify: false
      url: "{host:s}/api/v1/appmgr/devices?searchByTags={tagName:s}"
      method: GET
      headers:
        x-token-id: "{token:s}"
        content-type: application/text # used to avoid json error in tavern
    response:
      status_code: 200
      headers:
        content-type: application/json
      body:
        data: 
          - tags:
            - {tagId: "{new_testag_id:s}", name: "{tagName:s}"}
  
  - name: delete a device
    request:
      verify: false
      url: "{host:s}/api/v1/appmgr/devices/{deviceid:d}"
      method: DELETE
      headers:
        x-token-id: "{token:s}"
        content-type: application/text
    response:
      status_code: 200
      headers:
        content-type: application/json
      body:
        $ext:
          function: utils:checkIp10102051nodata
      